generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id       String  @id @default(auto()) @map("_id") @db.ObjectId
  /// Multiple data types found: String: 75%, BigInt: 25% out of 4 sampled entries
  age      String
  email    String  @unique
  name     String
  password String?
  posts    Post[]
  isAdmin  Boolean @default(false)
}
model Post {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  content   String
  image     String?  // Campo opcional para a imagem
  userId    String   @db.ObjectId // Referência ao usuário que fez a postagem
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now()) 
}
model Quadra {
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  location    String     // Localização da quadra
  imageUrl    String     // URL da imagem da quadra
  photos      String[]   // URLs das imagens da quadra
  horarios    Horario[]  @relation("HorariosQuadra") // Relação com os horários disponíveis
  diasSemana  DiaSemana[] // Dias da semana que a quadra está disponível
  openingTime String     // Horário de abertura
  closingTime String     // Horário de fechamento
}

enum DiaSemana {
  DOMINGO
  SEGUNDA
  TERCA
  QUARTA
  QUINTA
  SEXTA
  SABADO
}

model Horario {
  id           String    @id @default(auto()) @map("_id") @db.ObjectId
  horarioInicio Int      // Hora de início do agendamento, ex: 7 para 7h
  horarioFim    Int      // Hora de término do agendamento, ex: 8 para 8h
  quadraId      String   @db.ObjectId
  quadra        Quadra   @relation(name: "HorariosQuadra", fields: [quadraId], references: [id])
  diaSemana     DiaSemana // Dia específico para este horário
}




